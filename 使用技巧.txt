1.获取当前窗口的title
	--标题栏的文字（测试点）
	--driver.title 属性
	--title可能不是一成不变的，随着页面变化，可能跟着变。
	此时可再次调用driver.title()
	
	driver.get('http://www.baidu.com')
	print(driver.title)
	driver.find_element_by_id('kw').send_keys（'松勤\n'）
	print(driver.title)
	
	*****
	单步执行OK，但是连续执行，第二个标题仍然是‘百度一下’，why？
	有的操作，必须等待界面变化之后才能获取
	解决：
	1: driver.find_element_by_id('1')
	2:
	
	有了implicitly_wait（），仍出现这个问题
	implicitly_wait 只对find_element系列有效，找不到元素才会等
	但是找到元素后，做的其它的动作，导致界面的变化，这个时候不会说等到结果出来
	*****

2 获取当前地址栏的url
	--driver.current_url 属性
	-- print(driver.current_url)

3 截屏
	--什么时候需要截屏？
	-- 进行web界面自动化测试的时候出现了错误，需要截取当前屏幕，看出现问题的时候，界面到底是什么样子。
	有了界面之后，就能确认到底是不是系统的问题
	--截屏功能非常常用，只要出现问题，就会截屏
	--driver.get('http://www.souhu.com')
	  driver.get_screenshot_as_file('ssl.png')
	--目前只支持整个页面的截屏，不支持元素的截屏，但是元素的截屏接口是有的。
		--p3已经支持元素的截屏
	
	--如果不写绝对路径，截屏的文件放在当前工作路径下面。
	
	--如果截屏失败，可能是浏览器驱动和浏览器版本不匹配，如果匹配了，一般可以成功。
	可以浏览器驱动和浏览器版本都用最新的。
	
	--只能保存为png格式，即使文件名字写的是jpg，实际保存的也是png。
	要解决格式转换问题，可以使用第三方工具做转换，然后import os.system

切换窗口
	--在原来的html页面，点击某个页面，调到了新的html窗口，当前窗口为新的html窗口
	--每一个窗口都有一个handle（句柄），类似于id
	
	当前浏览器打开的每一个窗口的handle，都是window_handles里面，这是一个列表
	
	具体做法：
		--循环遍历 driver.window_handles
		--driver.switch_to.window(handle)方法切入新窗口
		--检查该窗口特点（获取标题栏），是否为要切入的那个
		
	代码：
		print(driver.window_handles)
		
		for handle in driver.window_handles:
			driver.switch_to.window(handle)
			# 希望切入到百度窗口
			if '百度' in driver.title:
				break
		kw = driver.find_element_by_id('kw')
		kw.send_keys('松勤\n')
		
切换回原来的窗口：	
		切换之前，先保存当前窗口的句柄：
			mainwindow = driver.current_window_handle
			...
		之后，直接switch_to
			driver.switch_to_window(mainwindow)
		
关闭窗口
	close 方法、
	与quit()区别：
		close只是关闭一个窗口，且是当前窗口，并不会关闭chromedrivequit会把整个浏览器关闭了，并且整个chromedriver也会退出
		
弹出对话框：
	在界面弹出的一个对话框，用F12无法定位，因为不是HTML元素的内容。这是浏览器的原生对话框。
	--主要包含3钟：
		alert：只有一个 确定 按钮
		confirm：有 确定 和 取消按钮
		prompt：需要用户输入文字
			浏览器原生的prompt对话框只有一个输入框
		
	操作方法：
		-- switch_to_alert
			不同种类的对话框都叫alert
		
		-- 点击OK	
			driver.switch_to_alert.accept()
			
		--获取告警框的文本内容：
			driver.switch_to_alert.text
	
		-- 点击cancel
			driver.switch_to_alert.dismiss()
		
		-- 输入内容（prompt）
			driver.switch_to_alert.send_keys()
	
	--对话框的输入框不止一个
		--浏览器的原生输入框只有一个
		--如果有多个输入框，那是由html绘制的输入框，可以用F12查看界面元素，可通过原来的方法操作
		
		--原生的对话框一般出现在后台，供系统管理员使用

文件上传：
	windows通用的：
	-- 点击上传按钮之后，选择文件对话框不一定立即出现，需要等待1-2s，sleep
	
	具体操作：
		-- import win32com.client
			-- 如果没有，pip install pypiwin32
		
			shell = win32com.client.Dispatch('WScript.Shell')
			
			# 有的系统要加\r\n
			# \r
			shell.Sendkeys(r'd:\1.jpg' +'\n')
			
			# 只适应于windows机器

页面操作
	刷新页面
		-- driver.refresh()
	
	前进：
		-- driver.forward()
	
	后退:
		-- driver.back()
		
对于鼠标一一走，就消失的界面元素：
	做法：
		--F12->Console
		--输入：
		setTimeout(function(){debugger;},5000)
		setTimeout(function(){})
		
		5000：单位是毫秒，即5s
		
	
	